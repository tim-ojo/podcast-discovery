"use strict";var ApplicationConfiguration=function(){var applicationModuleName="podcast-discovery",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("discover",["ngResource"]),ApplicationConfiguration.registerModule("users"),angular.module("discover",["angular-google-analytics"]).config(["AnalyticsProvider",function(AnalyticsProvider){AnalyticsProvider.setAccount({tracker:"UA-78350653-1",name:"tracker1",displayFeatures:!0,enhancedLinkAttribution:!0,trackEvent:!0}),AnalyticsProvider.trackUrlParams(!0),AnalyticsProvider.trackPages(!0),AnalyticsProvider.setPageEvent("$stateChangeSuccess"),AnalyticsProvider.ignoreFirstPageLoad(!1),AnalyticsProvider.setDomainName("www.podcastdiscovery.net"),AnalyticsProvider.logAllCalls(!0)}]),angular.module("discover").config(["$stateProvider","$urlRouterProvider","$httpProvider",function($stateProvider,$urlRouterProvider,$httpProvider){function authenticate($q,$state,$timeout,Authentication){return Authentication.user?$q.when():($timeout(function(){$state.go("loginPage")}),$q.reject())}$httpProvider.defaults.cache=!0,$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/discover/views/home.client.view.html"}).state("loginPage",{url:"/login",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("new",{url:"/new",templateUrl:"modules/discover/views/addResource.client.view.html",resolve:{authenticate:authenticate}}).state("all_podcasts",{url:"/podcasts",templateUrl:"modules/discover/views/allResources.client.view.html"}).state("search",{url:"/search?query",templateUrl:"modules/discover/views/searchResults.client.view.html",params:{query:{value:"",squash:!0}}}).state("podcast",{url:"/podcasts/:resourceId",templateUrl:"modules/discover/views/resource.client.view.html"}).state("podcast_entry",{url:"/podcasts/:resourceId/:entryId",templateUrl:"modules/discover/views/resource.client.view.html"}).state("tags",{url:"/topics",templateUrl:"modules/discover/views/topics.client.view.html"})}]),angular.module("discover").controller("AddResourceController",["$scope","Resources","$state","Authentication","$window","$http","Analytics",function($scope,Resource,$state,auth,$window,$http,Analytics){Analytics.trackPage("/new","New Resource"),$scope.resource=new Resource,$scope.resource.createdBy=auth.user._id,$scope.getRss=function(){$window.feednami.load($scope.resource.feedUrl,function(result){if(result.error)console.log(result.error);else{var meta=result.feed.meta;$scope.feedentries=result.feed.entries,$scope.resource.title=meta.title,$scope.resource.subtitle=meta["itunes:subtitle"]["#"],$scope.resource.type="podcast-audio",$scope.resource.url=meta.link,$scope.resource.description=meta.description,$scope.authors=meta.author,$scope.topics=meta.categories.join(", "),$scope.resource.artworkUrl=meta.image.url,$scope.resource.lastPublishDate=meta.pubDate,$scope.$apply()}})},$scope.addResource=function(){$scope.authors&&$scope.authors.length>0&&($scope.resource.authors=$scope.authors.split(",")),$scope.topics&&$scope.topics.length>0&&($scope.resource.topics=[],$scope.topics.split(",").forEach(function(topic){if(topic.length>0){var newTopic={topic:topic.toLowerCase().trim(),significance:.9};$scope.resource.topics.push(newTopic)}})),$scope.resource.$save(function(created,headers){$state.go("podcast",{resourceId:created._id});var entries=$scope.feedentries.map(function(entry){var rEntry={title:entry.title,resourceId:created._id,url:entry.link,enclosure:entry.enclosures[0].url,pubDate:entry.date,description:entry.summary,authors:[entry.author]};return rEntry});$http.post("/entries",entries)},function(err){$scope.errorState=!0})}}]),angular.module("discover").controller("AllResourcesController",["$scope","Resources","$http","$window","Analytics",function($scope,Resource,$http,$window,Analytics){$scope.enableFilter=!0,Analytics.trackPage("/podcasts","All Podcasts"),$scope.getResources=function(){$http.get("/resource-list/"+$scope.currentPage).success(function(response){$scope.items=response,$window.scrollTo(0,0)}),$http.get("/resources-count").success(function(response){$scope.totalItems=response.count})},$scope.totalItems=50,$scope.currentPage=1,$scope.setPage=function(pageNo){$scope.currentPage=pageNo},$scope.pageChanged=function(){$scope.getResources()}}]),angular.module("discover").controller("HeaderController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("discover").controller("HomeController",["$scope","$state","Authentication","Analytics",function($scope,$state,Authentication,Analytics){$scope.authentication=Authentication,Analytics.trackPage("/","home"),$scope.execSearch=function(){$state.go("search",{query:$scope.query})}}]),angular.module("discover").controller("ResourceController",["$scope","$stateParams","$http","Resources","$location","$anchorScroll","Analytics",function($scope,$stateParams,$http,Resource,$location,$anchorScroll,Analytics){$scope.selectedEntryId=$stateParams.entryId,$scope.resource=Resource.get({id:$stateParams.resourceId}),Analytics.trackPage("/podcasts/"+$stateParams.resourceId,"Podcast: "+$stateParams.resourceId),$http.get("/resource-entries/"+$stateParams.resourceId).success(function(response){$scope.entries=response,$scope.selectedEntry=$scope.entries.filter(function(entry){return entry._id===$scope.selectedEntryId})[0],void 0!==$stateParams.entryId&&(Analytics.trackPage("/podcasts/"+$stateParams.resourceId+"/"+$stateParams.entryId,"Podcast: "+$scope.resource.name+" > Episode: "+$scope.selectedEntry.name),$location.hash("episode"),$anchorScroll())})}]),angular.module("discover").controller("ResourceListController",["$scope","$window",function($scope,$window){$scope.screenWidth=$window.innerWidth,$scope.screenWidth<=700?$scope.descCharCount=500:$scope.descCharCount=1e3}]),angular.module("discover").controller("SearchResultsController",["$scope","$state","$stateParams","$http","Analytics",function($scope,$state,$stateParams,$http,Analytics){Analytics.trackPage("/search","search"),$scope.getSearchResults=function(){""!==$stateParams.query&&($http.get("/search?q="+$stateParams.query).success(function(response){$scope.items=response}),$scope.query=$stateParams.query)},$scope.execSearch=function(){$state.go("search",{query:$scope.query})},$scope.currentPage=1,$scope.pageSize=10,$scope.offset=0,$scope.pageChanged=function(){$scope.offset=($scope.currentPage-1)*$scope.pageSize}}]),angular.module("discover").controller("TopicsController",["$scope",function($scope){$scope.topics=["software","security","code","process","cloud","web","development","learn","data","business","javascript","microsoft","management","programming","apple","open source","google","windows","technology","tools","information","design","software process","agile","mobile","developer","app","analytics","service","conference","projects","aws","github","testing","c","ruby","php","community","functional programming","java","platform","features","performance","marketing","server","enterprise","python","user","devops","drupal","big data","azure"]}]),angular.module("discover").filter("displayType",function(){return function(typeStr){return"podcast-audio"===typeStr||"podcast-video"===typeStr||"resource"===typeStr?"podcast":"entry"===typeStr?"episode":typeStr}}),angular.module("discover").filter("relativeDate",function(){return function(dateStr){var date=new Date(dateStr),diff=((new Date).getTime()-date.getTime())/1e3,day_diff=Math.floor(diff/86400),year=date.getFullYear(),month=date.getMonth()+1,day=date.getDate();if(isNaN(day_diff)||0>day_diff||day_diff>=31)return year.toString()+"-"+(10>month?"0"+month.toString():month.toString())+"-"+(10>day?"0"+day.toString():day.toString());var r=0===day_diff&&(60>diff&&"just now"||120>diff&&"1 minute ago"||3600>diff&&Math.floor(diff/60)+" minutes ago"||7200>diff&&"1 hour ago"||86400>diff&&Math.floor(diff/3600)+" hours ago")||1===day_diff&&"Yesterday"||7>day_diff&&day_diff+" days ago"||31>day_diff&&Math.ceil(day_diff/7)+" weeks ago";return r}}),angular.module("discover").factory("Resources",["$resource",function($resource){return $resource("/resources/:id",{id:"@_id"},{update:{method:"PUT"}})}]),angular.module("discover").filter("trusted",["$sce",function($sce){return function(url){return $sce.trustAsResourceUrl(url)}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","Analytics",function($scope,$http,$location,Authentication,Analytics){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),Analytics.trackPage("/login","Social Login"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);